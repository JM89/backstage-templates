apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: python-app
  title: Python app template
  description: Python app template
  tags:
    - recommended
    - python
spec:
  owner: jm89
  type: service
  parameters:
    - title: Fill in some steps
      required:
        - appFriendlyName
        - appDescription
        - appId
      properties:
        appId: 
          title: Unique App ID 
          type: string
          description: "Unique App ID (e.g.: backstage-component-test)"
          ui:field: EntityNamePicker
        appFriendlyName:
          title: App Friendly Name
          type: string
          description: Friendly Name for the application.
          ui:autofocus: true
          ui:options:
            rows: 1
        appDescription:
          title: App Description
          type: string
          description: Description of what the app will do
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./skeleton
        values:
          friendly_name: ${{ parameters.appFriendlyName }}
          description: ${{ parameters.appDescription }}
          repo_url: ${{ parameters.repoUrl }}
          app_id: ${{ parameters.appId }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        repoUrl: ${{ parameters.repoUrl }}
        description: ${{ parameters.appDescription }}
        defaultBranch: main

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
        
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}